<template>
  <view class="publish-container">
    <!-- 视频选择按钮 -->
    <button @tap="chooseVideo" class="choose-button">+选择视频</button>

    <!-- 文字描述框 -->
    <textarea v-model="title" placeholder="请输入视频描述" class="custom-textarea"></textarea>

    <!-- 发布视频按钮 -->
    <button @tap="publishVideo" class="publish-button" color="#fff">发布视频</button>
  </view>
</template>

<script>
export default {
  data() {
    return {
      videoPath: '', // 存储选取的视频路径
      title: '',     // 视频描述
      token: '',
      file: null,
    };
  },
  onLoad() {
    this.token = uni.getStorageSync('token');
    console.log('Token in onLoad:', this.token);

    if (!this.token) {
      console.error('Token is empty or undefined. Please check your storage or authentication logic.');
    }
  },
  methods: {
    // 选择视频
    chooseVideo() {
      this.token = uni.getStorageSync('token');
      console.log('Token in chooseVideo:', this.token);

      uni.chooseVideo({
        sourceType: ['album', 'camera'],
        maxDuration: 60,
        camera: 'back',
        success: (res) => {
          this.videoPath = res.tempFilePath; // 保存选择的视频路径
          // 注意：这里不再使用 this.file
        },
        fail: (err) => {
          console.error('选择视频失败:', err);
        },
      });
    },

    // 发布视频
    publishVideo() {
      this.token = uni.getStorageSync('token');
      console.log('Token in publishVideo:', this.token);

      // 使用 uni.uploadFile 上传文件
      uni.uploadFile({
        url: 'http://192.168.89.9:8080/douyin/publish/action/',
        filePath: this.videoPath,
        name: 'data', // 后端接收文件的字段名
        formData: {
          token: this.token,
          title: this.title,
        },
        success: (res) => {
          console.log('发布视频成功:', res.data);
        },
        fail: (err) => {
          console.error('发布视频失败:', err);
        },
      });
    },
  },
};
</script>

<style>
/* 自定义样式类 */
.publish-container{
	display: flex;
	flex-direction: column;
	justify-content: center;
	background-color: #ebebeb;
}

.custom-textarea {
  color: #191019;
  background-color: #ffffff;
  margin-bottom: 20px;  /* 调整上下间距 */
  font-weight: bold; /* 加粗 */
  margin: 10px;
  padding: 10px;
  margin-top: 10px;
  height: 600px;  
  font-size: 18px;
  border-radius: 10px;//原角
},
.choose-button{
   
  background-color: #ffffff;
  color: #ffffff;
  margin: 10px;
  padding: 10px;
  border-radius: 10px;//原角
}
.publish-button{
	margin-bottom: 0px;  /* 调整上下间距 */
	color:#ffffff;
	background-color: #ff0000;
	margin: 10px;
	padding: 10px;
}
</style>
